gender_input <- "Male"
age_input <- "36 - 45"
survival_plot <- function(gender_input, age_input) {
user_survdt <- survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(
Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
return(user_kmcurve)
}
legend_title = function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
survPlot = function(gender_input, age_input) {
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
}
survPlot()
gender_input = "Male"
age_input = "36 - 45"
survival_plot = function(gender_input, age_input) {
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_survdt
#user_kmcurve <- survfit(
#  Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
return(user_kmcurve)
}
legend_title = function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
survPlot = function(gender_input, age_input) {
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
}
survPlot(gender_input, age_input)
legend_title = function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
survPlot = function(gender_input, age_input) {
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
}
survPlot(gender_input, age_input)
shiny::runApp()
runApp()
runApp()
runApp()
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
gender_input = "Male"
age_input = "36 - 45"
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
survdt_m = readRDS("survdt_m.rds")
load("elastic.glm.v4.Rdata")
load("backup_model_v2.Rdata")
load("100_genes.rdata")
immune_elastic = readRDS("elastic_model_immune.RDS")
train_immune = readRDS("immune_gene_final_edit.RDS")
immune_status = readRDS("immune_status.rds")
edited_immune_elastic = readRDS("edited_elastic_model_immune.RDS")
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
gender_input = "Male"
age_input = "36 - 45"
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
ggsurv <- ggsurvplot(
user_kmcurve, # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
gender_input = "Male"
age_input = "36 - 45"
survdt_m = readRDS("survdt_m.rds")
load("elastic.glm.v4.Rdata")
load("backup_model_v2.Rdata")
load("100_genes.rdata")
immune_elastic = readRDS("elastic_model_immune.RDS")
train_immune = readRDS("immune_gene_final_edit.RDS")
immune_status = readRDS("immune_status.rds")
edited_immune_elastic = readRDS("edited_elastic_model_immune.RDS")
survival_plot <- function(gender_input, age_input) {
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
return(user_kmcurve)
}
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
survPlot <- function(gender_input, age_input) {
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
}
survPlot(gender_input, age_input)
gender_input = "Male"
age_input = "36 - 45"
survdt_m = readRDS("survdt_m.rds")
load("elastic.glm.v4.Rdata")
load("backup_model_v2.Rdata")
load("100_genes.rdata")
immune_elastic = readRDS("elastic_model_immune.RDS")
train_immune = readRDS("immune_gene_final_edit.RDS")
immune_status = readRDS("immune_status.rds")
edited_immune_elastic = readRDS("edited_elastic_model_immune.RDS")
survival_plot <- function(gender_input, age_input) {
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
return(user_kmcurve)
}
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
survPlot <- function(gender_input, age_input) {
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
}
survPlot(gender_input, age_input)
gender_input = "Male"
age_input = "36 - 45"
survdt_m = readRDS("survdt_m.rds")
load("elastic.glm.v4.Rdata")
load("backup_model_v2.Rdata")
load("100_genes.rdata")
immune_elastic = readRDS("elastic_model_immune.RDS")
train_immune = readRDS("immune_gene_final_edit.RDS")
immune_status = readRDS("immune_status.rds")
edited_immune_elastic = readRDS("edited_elastic_model_immune.RDS")
survival_plot <- function(gender_input, age_input) {
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
return(user_kmcurve)
}
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
survPlot <- function(gender_input, age_input) {
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
}
survPlot(gender_input, age_input)
library(shiny)
library(GEOquery)
library(R.utils)
library(reshape2)
library(ggplot2)
library(tidyverse)
library(limma)
library(biomaRt)
library(ggbiplot)
library(factoextra)
library(caret)
library(glmnet)
library(DESeq2)
library(edgeR)
library(DEFormats)
library(ROCR)
library(pROC)
library(doParallel)
library(foreach)
library(DescTools)
library(ggthemes)
library(shinycssloaders)
library(shinydashboard)
library(class)
library(rsconnect)
library(BiocManager)
library(affy)
library(oligo)
# library(pd.mogene.2.0.st)
# library(mogene20sttranscriptcluster.db)
library(stringr)
# library(dashboardthemes)
library(survminer)
library(survival)
library(survMisc)
library(EnsDb.Hsapiens.v79)
options(repos = BiocManager::repositories())
gender_input = "Male"
age_input = "36 - 45"
survdt_m = readRDS("survdt_m.rds")
load("elastic.glm.v4.Rdata")
load("backup_model_v2.Rdata")
load("100_genes.rdata")
immune_elastic = readRDS("elastic_model_immune.RDS")
train_immune = readRDS("immune_gene_final_edit.RDS")
immune_status = readRDS("immune_status.rds")
edited_immune_elastic = readRDS("edited_elastic_model_immune.RDS")
survival_plot <- function(gender_input, age_input) {
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
return(user_kmcurve)
}
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
ggsurv <- ggsurvplot(
survival_plot(gender_input, age_input), # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
gender_input = "Male"
age_input = "36 - 45"
survdt_m = readRDS("survdt_m.rds")
load("elastic.glm.v4.Rdata")
load("backup_model_v2.Rdata")
load("100_genes.rdata")
immune_elastic = readRDS("elastic_model_immune.RDS")
train_immune = readRDS("immune_gene_final_edit.RDS")
immune_status = readRDS("immune_status.rds")
edited_immune_elastic = readRDS("edited_elastic_model_immune.RDS")
user_survdt = survdt_m %>% dplyr::filter(
Gender == gender_input,
Age == age_input
)
user_kmcurve <- survfit(Surv(C2daystodnDSA, C2dnDSA) ~ Eplet2MM, data = user_survdt)
legend_title <- function(gender_input, age_input) {
legend_title = paste(gender_input, ":", age_input, "y.o.")
return(legend_title)
}
ggsurv <- ggsurvplot(
user_kmcurve, # survfit object with calculated statistics.
risk.table = TRUE,       # show risk table.
pval = TRUE,             # show p-value of log-rank test.
palette = c("#E7B800", "#2E9FDF"),
caption = "Data Provided by Dr. Germain Wong (University of Sydney) \n DSA = Donor Specific Antibody",
ggtheme = theme_bw(), # customize plot and risk table with a theme.
risk.table.y.text.col = T,# colour risk table text annotations.
risk.table.height = 0.25, # the height of the risk table
risk.table.y.text = FALSE,# show bars instead of names in text annotations
# in legend of risk table.
surv.median.line = "hv",  # add the median survival pointer.
xlab = "Time (Years)",
ylab = "Estimated Probability",
subtitle = legend_title(gender_input, age_input),
title = "Estimated Probability for Class II de novo DSA Appearance",
font.title = c(16, "bold", "darkblue"),
font.x = c(14, "bold", "red"),
font.y = c(14, "bold", "darkred"),
font.tickslab = c(12, "bold"),
font.subtitle = c(12, "bold"),
legend = "top",
legend.title = "Donor Mismatches",
legend.labs = c(" < 30 Mismatches", " > 30 Mismatches")
)
ggsurv$plot = ggsurv$plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(hjust = 0.5))
ggsurv
mean_train<- mean(train_data_100)
inFile <- input$GeneData
mean_train<- mean(train_data_100)
inFile <- "./Patient_Data/GSM3406956_s2.txt"
#read.csv(inFile$datapath, header = input$header)
file<- read.delim(inFile, header = TRUE)
genes <- as.matrix(file[,1])
gse<- as.numeric(file[,-1])
gse<- data.matrix(gse)
rownames(gse) <- genes
counts <- gse
#getting the processed counts matrix
cpm_counts <- cpm(counts)
lcpm <- log2(cpm_counts+1)
data_counts<- normalizeQuantiles((lcpm))
#checks if ensemble id needs to be transformed
if (startsWith(genes[2], "E")){
rownames(data_counts) = sapply(strsplit(rownames(data_counts), ".", fixed=T), function(x) x[1])
symbols <- select(EnsDb.Hsapiens.v79, key= as.character(rownames(data_counts)), columns=c("SYMBOL"), keytype="GENEID")
df.gse<- as.data.frame(data_counts)
gse <- merge(df.gse, symbols, by.x = 0, by.y = 'GENEID', all.x = TRUE)
gene_symbols<- gse[,3]
data_counts <- as.matrix(gse[,2])
rownames(data_counts) <- gene_symbols
}
